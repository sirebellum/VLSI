`timescale 1ns / 1ps

module test_bench();

 // Clock signal setup
reg clk = 0;
always
    #10 clk = ~clk; // Change every 10


reg [15:0] A, B;
reg Cin;
wire [15:0] Sum;
wire Cout;

CLAA_16bit c1(Cin, A, B, Cout, Sum);

initial begin // Initialize input
    // 0000000000000000 + 1101110111011101 + 1 = 1101110111011110
    A = 16'b0000000000000000;
    B = 16'b1101110111011101;
    Cin = 1;
    #10
    // 0101010101010101 + 1101110111011101 + 1 = 1 0011001100110011
    A = 16'b0101010101010101;
    B = 16'b1101110111011101;
    Cin = 1;
    #10
    // 1001101011001110 + 1001011010100001 + 0 = 1 0011000101101111
    A = 16'b1001101011001110;
    B = 16'b1001011010100001;
    Cin = 0;
    #10
    // 1110110101011110 + 0000000010100001 + 1 = 110111000000000
    A = 16'b1110110101011110;
    B = 16'b0000000010100001;
    Cin = 1;
end

endmodule